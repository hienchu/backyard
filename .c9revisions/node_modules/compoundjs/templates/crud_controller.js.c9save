{"ts":1359651703856,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"load('application');\n\nbefore(loadModel, {only: ['show', 'edit', 'update', 'destroy']});\n\naction('new', function () {\n    this.title = 'New model';\n    this.model = new Model;\n    render();\n});\n\naction(function create() {\n    Model.create(req.body.Model, function (err, model) {\n        if (err) {\n            flash('error', 'Model can not be created');\n            render('new', {\n                model: model,\n                title: 'New model'\n            });\n        } else {\n            flash('info', 'Model created');\n            redirect(path_to.models);\n        }\n    });\n});\n\naction(function index() {\n    this.title = 'Models index';\n    Model.all(function (err, models) {\n        render({\n            models: models\n        });\n    });\n});\n\naction(function show() {\n    this.title = 'Model show';\n    render();\n});\n\naction(function edit() {\n    this.title = 'Model edit';\n    render();\n});\n\naction(function update() {\n    this.model.updateAttributes(body.Model, function (err) {\n        if (!err) {\n            flash('info', 'Model updated');\n            redirect(path_to.model(this.model));\n        } else {\n            flash('error', 'Model can not be updated');\n            this.title = 'Edit model details';\n            render('edit');\n        }\n    }.bind(this));\n});\n\naction(function destroy() {\n    this.model.destroy(function (error) {\n        if (error) {\n            flash('error', 'Can not destroy model');\n        } else {\n            flash('info', 'Model successfully removed');\n        }\n        send(\"'\" + path_to.models + \"'\");\n    });\n});\n\nfunction loadModel() {\n    Model.find(params.id, function (err, model) {\n        if (err || !model) {\n            redirect(path_to.models);\n        } else {\n            this.model = model;\n            next();\n        }\n    }.bind(this));\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1807}]],"length":1807}
