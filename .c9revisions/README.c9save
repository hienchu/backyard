{"ts":1358959811304,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Feel free to change or remove this file, it is informational only.\n\nRepo Layout\n===========\nnode_modules/                       - Any Node modules packaged with the app\ndeplist.txt                         - Deprecated.\npackage.json                        - npm package descriptor.\nnpm_global_module_list              - List of globally installed node modules\n                                      (on OpenShift)\n.openshift/                         - Location for openshift specific files\n.openshift/action_hooks/pre_build   - Script that gets run every git push before\n                                      the build\n.openshift/action_hooks/build       - Script that gets run every git push as\n                                      part of the build process (on the CI\n                                      system if available)\n.openshift/action_hooks/deploy      - Script that gets run every git push after\n                                      build but before the app is restarted\n.openshift/action_hooks/post_deploy - Script that gets run every git push after\n                                      the app is restarted\n\nNotes about layout\n==================\nPlease leave the node_modules and .openshift directories but feel free to\ncreate additional directories if needed.\n\nNote: Every time you push, everything in your remote repo dir gets recreated\n      please store long term items (like an sqlite database) in the OpenShift\n      data directory, which will persist between pushes of your repo.\n      The OpenShift data directory is accessible relative to the remote repo\n      directory (../data) or via an environment variable OPENSHIFT_DATA_DIR.\n\n\nEnvironment Variables\n=====================\nOpenShift provides several environment variables to reference for ease\nof use.  The following list are some common variables but far from exhaustive:\n    process.env.OPENSHIFT_DATA_DIR  - For persistent storage (between pushes)\n    process.env.OPENSHIFT_TMP_DIR   - Temp storage (unmodified files deleted after 10 days)\n\nWhen embedding a database using 'rhc app cartridge add', you can reference\nenvironment variables for username, host and password. Example for mysql:\n    process.env.OPENSHIFT_MYSQL_DB_HOST      - DB Host\n    process.env.OPENSHIFT_MYSQL_DB_PORT      - DB Port\n    process.env.OPENSHIFT_MYSQL_DB_USERNAME  - DB Username\n    process.env.OPENSHIFT_MYSQL_DB_PASSWORD  - DB Password\n\nWhen embedding a NoSQL database using 'rhc app cartridge add', you can\nreference environment variables for username, host and password.\nExample for MongoDB:\n    process.env.OPENSHIFT_MONGODB_DB_HOST      - NoSQL DB Host\n    process.env.OPENSHIFT_MONGODB_DB_PORT      - NoSQL DB Port\n    process.env.OPENSHIFT_MONGODB_DB_USERNAME  - NoSQL DB Username\n    process.env.OPENSHIFT_MONGODB_DB_PASSWORD  - NoSQL DB Password\n\nTo get a full list of environment variables, simply add a line in your\n.openshift/action_hooks/build script that says \"export\" and push.\n\n\ndeplist.txt\n===========\nThis functionality has been deprecated and will soon go away.\npackage.json is the preferred method to add dependencies.\n\n\npackage.json\n============\nnpm package descriptor - run \"npm help json\" for more details.\n\nNote: Among other things, this file contains a list of dependencies\n      (node modules) to install alongside your application and is processed\n      every time you \"git push\" to your OpenShift application.\n\n\nDevelopment Mode\n================\n\nWhen you push your code changes to OpenShift, if you want dynamic reloading\nof your javascript files in \"development\" mode, you can either use the\nhot_deploy marker (see .openshift/markers/README) or add the following to\npackage.json.\n   \"scripts\": { \"start\": \"supervisor <relative-path-from-repo-to>/server.js\" },\n\nThis will run Node with Supervisor - https://npmjs.org/package/supervisor\n\n\nLocal Development + Testing\n===========================\n\nYou can also develop and test your Node application locally on your machine\n(workstation). In order to do this, you will need to perform some\nbasic setup - install Node + the npm modules that OpenShift has globally\ninstalled:\n   1. Collect some information about the environment on OpenShift.\n         A. Get Node.js version information:\n\t      $ ssh $uuid@$appdns node -v\n         B. Get list of globally install npm modules\n\t      $ ssh $uuid@$appdns npm list -g\n\n   2. Ensure that an appropriate version of Node is installed locally.\n      This depends on your application. Using the same version would be\n      preferable in most cases but your mileage may vary with newer versions.\n\n   3. Install the versions of the Node modules you got in step 1.A\n      Use -g if you want to install them globally, the better alternative\n      though is to install them in the home directory of the currently\n      logged user on your local machine/workstation.\n         pushd ~\n         npm install [-g] $module_name@$version\n         popd\n\n\nOnce you have completed the above setup, you can then run your application\nlocally by using any one of these commands:\n    node server.js\n    npm start -d\n    supervisor server.js\n\nAnd then iterate on developing+testing your application.\n\n\nAdditional information\n======================\nLink to additional information will be here, when we have it :)\n\n"]],"start1":0,"start2":0,"length1":0,"length2":5273}]],"length":5273}
